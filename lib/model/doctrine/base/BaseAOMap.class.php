<?php

/**
 * BaseAOMap
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $mid
 * @property integer $aid
 * @property integer $org_id
 * @property string $department
 * @property string $description
 * @property string $struktural
 * @property string $fungsional
 * @property integer $job_type_id
 * @property integer $job_position_id
 * @property Alumni $Alumni
 * @property Organization $Organization
 * @property JobType $JobType
 * @property JobPosition $JobPosition
 * 
 * @method integer      getMid()             Returns the current record's "mid" value
 * @method integer      getAid()             Returns the current record's "aid" value
 * @method integer      getOrgId()           Returns the current record's "org_id" value
 * @method string       getDepartment()      Returns the current record's "department" value
 * @method string       getDescription()     Returns the current record's "description" value
 * @method string       getStruktural()      Returns the current record's "struktural" value
 * @method string       getFungsional()      Returns the current record's "fungsional" value
 * @method integer      getJobTypeId()       Returns the current record's "job_type_id" value
 * @method integer      getJobPositionId()   Returns the current record's "job_position_id" value
 * @method Alumni       getAlumni()          Returns the current record's "Alumni" value
 * @method Organization getOrganization()    Returns the current record's "Organization" value
 * @method JobType      getJobType()         Returns the current record's "JobType" value
 * @method JobPosition  getJobPosition()     Returns the current record's "JobPosition" value
 * @method AOMap        setMid()             Sets the current record's "mid" value
 * @method AOMap        setAid()             Sets the current record's "aid" value
 * @method AOMap        setOrgId()           Sets the current record's "org_id" value
 * @method AOMap        setDepartment()      Sets the current record's "department" value
 * @method AOMap        setDescription()     Sets the current record's "description" value
 * @method AOMap        setStruktural()      Sets the current record's "struktural" value
 * @method AOMap        setFungsional()      Sets the current record's "fungsional" value
 * @method AOMap        setJobTypeId()       Sets the current record's "job_type_id" value
 * @method AOMap        setJobPositionId()   Sets the current record's "job_position_id" value
 * @method AOMap        setAlumni()          Sets the current record's "Alumni" value
 * @method AOMap        setOrganization()    Sets the current record's "Organization" value
 * @method AOMap        setJobType()         Sets the current record's "JobType" value
 * @method AOMap        setJobPosition()     Sets the current record's "JobPosition" value
 * 
 * @package    alumni
 * @subpackage model
 * @author     E.R. Nurwijayadi <epsi.rns@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAOMap extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('a_o_map');
        $this->hasColumn('mid', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('aid', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('org_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('department', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             ));
        $this->hasColumn('description', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             ));
        $this->hasColumn('struktural', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('fungsional', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('job_type_id', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));
        $this->hasColumn('job_position_id', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Alumni', array(
             'local' => 'aid',
             'foreign' => 'aid',
             'onDelete' => 'Cascade'));

        $this->hasOne('Organization', array(
             'local' => 'org_id',
             'foreign' => 'org_id',
             'onDelete' => 'Cascade'));

        $this->hasOne('JobType', array(
             'local' => 'job_type_id',
             'foreign' => 'job_type_id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('JobPosition', array(
             'local' => 'job_position_id',
             'foreign' => 'job_position_id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}