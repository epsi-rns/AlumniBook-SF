<?php

/**
 * BaseAddress
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $did
 * @property integer $lid
 * @property char $link_type
 * @property string $area
 * @property string $building
 * @property string $street
 * @property string $postal_code
 * @property integer $country_id
 * @property integer $province_id
 * @property integer $district_id
 * @property string $address
 * @property string $region
 * @property Country $Country
 * @property Province $Province
 * @property District $District
 * 
 * @method integer  getDid()         Returns the current record's "did" value
 * @method integer  getLid()         Returns the current record's "lid" value
 * @method char     getLinkType()    Returns the current record's "link_type" value
 * @method string   getArea()        Returns the current record's "area" value
 * @method string   getBuilding()    Returns the current record's "building" value
 * @method string   getStreet()      Returns the current record's "street" value
 * @method string   getPostalCode()  Returns the current record's "postal_code" value
 * @method integer  getCountryId()   Returns the current record's "country_id" value
 * @method integer  getProvinceId()  Returns the current record's "province_id" value
 * @method integer  getDistrictId()  Returns the current record's "district_id" value
 * @method string   getAddress()     Returns the current record's "address" value
 * @method string   getRegion()      Returns the current record's "region" value
 * @method Country  getCountry()     Returns the current record's "Country" value
 * @method Province getProvince()    Returns the current record's "Province" value
 * @method District getDistrict()    Returns the current record's "District" value
 * @method Address  setDid()         Sets the current record's "did" value
 * @method Address  setLid()         Sets the current record's "lid" value
 * @method Address  setLinkType()    Sets the current record's "link_type" value
 * @method Address  setArea()        Sets the current record's "area" value
 * @method Address  setBuilding()    Sets the current record's "building" value
 * @method Address  setStreet()      Sets the current record's "street" value
 * @method Address  setPostalCode()  Sets the current record's "postal_code" value
 * @method Address  setCountryId()   Sets the current record's "country_id" value
 * @method Address  setProvinceId()  Sets the current record's "province_id" value
 * @method Address  setDistrictId()  Sets the current record's "district_id" value
 * @method Address  setAddress()     Sets the current record's "address" value
 * @method Address  setRegion()      Sets the current record's "region" value
 * @method Address  setCountry()     Sets the current record's "Country" value
 * @method Address  setProvince()    Sets the current record's "Province" value
 * @method Address  setDistrict()    Sets the current record's "District" value
 * 
 * @package    alumni
 * @subpackage model
 * @author     E.R. Nurwijayadi <epsi.rns@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAddress extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('address');
        $this->hasColumn('did', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('lid', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('link_type', 'char', 1, array(
             'type' => 'char',
             'length' => 1,
             ));
        $this->hasColumn('area', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('building', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('street', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('postal_code', 'string', 7, array(
             'type' => 'string',
             'length' => 7,
             ));
        $this->hasColumn('country_id', 'integer', 2, array(
             'type' => 'integer',
             'default' => 99,
             'length' => 2,
             ));
        $this->hasColumn('province_id', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));
        $this->hasColumn('district_id', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
        $this->hasColumn('address', 'string', 175, array(
             'type' => 'string',
             'length' => 175,
             ));
        $this->hasColumn('region', 'string', 110, array(
             'type' => 'string',
             'length' => 110,
             ));


        $this->setAttribute(Doctrine_Core::ATTR_EXPORT, 'table');

        $this->setSubClasses(array(
             'AAddress' => 
             array(
              'link_type' => 'A',
             ),
             'OAddress' => 
             array(
              'link_type' => 'O',
             ),
             'MAddress' => 
             array(
              'link_type' => 'M',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'country_id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Province', array(
             'local' => 'province_id',
             'foreign' => 'province_id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('District', array(
             'local' => 'district_id',
             'foreign' => 'district_id',
             'onDelete' => 'SET NULL'));
    }
}